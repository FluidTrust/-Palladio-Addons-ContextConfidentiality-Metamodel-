/**
 */
package org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl;

import org.palladiosimulator.pcm.confidentiality.attackerSpecification.ImpactVulnerabilityFilterCriterion;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.Vulnerability;

/**
 * <!-- begin-user-doc --> An implementation of the model object '<em><b>Impact Vulnerability Filter
 * Criterion</b></em>'. <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 * <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl.ImpactVulnerabilityFilterCriterionImpl#getConfidentialityImpactMinimum
 * <em>Confidentiality Impact Minimum</em>}</li>
 * <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl.ImpactVulnerabilityFilterCriterionImpl#getIntegrityImpactMinimum
 * <em>Integrity Impact Minimum</em>}</li>
 * <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl.ImpactVulnerabilityFilterCriterionImpl#getAvailabilityImpactMinimum
 * <em>Availability Impact Minimum</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ImpactVulnerabilityFilterCriterionImpl extends ImpactVulnerabilityFilterCriterionImplGen
        implements ImpactVulnerabilityFilterCriterion {
    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated NOT
     */
    @Override
    public boolean isVulnerabilityInRange(final Vulnerability vulnerability) {
        return this.isLiteralValueInRange(vulnerability.getConfidentialityImpact(),
                this.getConfidentialityImpactMinimum())
                && this.isLiteralValueInRange(vulnerability.getIntegrityImpact(), this.getIntegrityImpactMinimum())
                && this.isLiteralValueInRange(vulnerability.getAvailabilityImpact(),
                        this.getAvailabilityImpactMinimum());
    }

} // ImpactVulnerabilityFilterCriterionImpl
