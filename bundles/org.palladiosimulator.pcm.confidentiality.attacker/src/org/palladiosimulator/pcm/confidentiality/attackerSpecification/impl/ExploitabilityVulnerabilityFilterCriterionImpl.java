/**
 */
package org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl;

import org.palladiosimulator.pcm.confidentiality.attackerSpecification.ExploitabilityVulnerabilityFilterCriterion;
import org.palladiosimulator.pcm.confidentiality.attackerSpecification.attackSpecification.Vulnerability;

/**
 * <!-- begin-user-doc --> An implementation of the model object '<em><b>Exploitability
 * Vulnerability Filter Criterion</b></em>'. <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 * <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl.ExploitabilityVulnerabilityFilterCriterionImpl#getAttackVectorMaximum
 * <em>Attack Vector Maximum</em>}</li>
 * <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl.ExploitabilityVulnerabilityFilterCriterionImpl#getAttackComplexityMaximum
 * <em>Attack Complexity Maximum</em>}</li>
 * <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl.ExploitabilityVulnerabilityFilterCriterionImpl#getPrivilegesMaximum
 * <em>Privileges Maximum</em>}</li>
 * <li>{@link org.palladiosimulator.pcm.confidentiality.attackerSpecification.impl.ExploitabilityVulnerabilityFilterCriterionImpl#getUserInteractionMaximum
 * <em>User Interaction Maximum</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ExploitabilityVulnerabilityFilterCriterionImpl extends ExploitabilityVulnerabilityFilterCriterionImplGen
        implements ExploitabilityVulnerabilityFilterCriterion {
    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated NOT
     */
    @Override
    public boolean isVulnerabilityInRange(final Vulnerability vulnerability) {
        return this.isLiteralValueInRange(vulnerability.getAttackVector(), this.getAttackVectorMaximum())
                && this.isLiteralValueInRange(vulnerability.getAttackComplexity(), this.getAttackComplexityMaximum())
                && this.isLiteralValueInRange(vulnerability.getPrivileges(), this.getPrivilegesMaximum())
                && this.isLiteralValueInRange(vulnerability.getUserInteraction(), this.getUserInteractionMaximum());
    }
} // ExploitabilityVulnerabilityFilterCriterionImpl
