/**
 * generated by Xtext 2.26.0
 */
package org.palladiosimulator.pcm.confidentiality.context.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import org.palladiosimulator.pcm.confidentiality.context.policy.PolicySet;
import org.palladiosimulator.pcm.confidentiality.context.services.ConfidentialityContextDSLGrammarAccess;

@SuppressWarnings("all")
public class ConfidentialityContextDSLFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private ConfidentialityContextDSLGrammarAccess _confidentialityContextDSLGrammarAccess;
  
  protected void _format(final PolicySet policySet, @Extension final IFormattableDocument document) {
    List<PolicySet> _policyset = policySet.getPolicyset();
    for (final PolicySet _policySet : _policyset) {
      document.<PolicySet>format(_policySet);
    }
  }
  
  public void format(final Object policySet, final IFormattableDocument document) {
    if (policySet instanceof PolicySet) {
      _format((PolicySet)policySet, document);
      return;
    } else if (policySet instanceof XtextResource) {
      _format((XtextResource)policySet, document);
      return;
    } else if (policySet instanceof EObject) {
      _format((EObject)policySet, document);
      return;
    } else if (policySet == null) {
      _format((Void)null, document);
      return;
    } else if (policySet != null) {
      _format(policySet, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(policySet, document).toString());
    }
  }
}
