// automatically generated by Xtext
grammar org.palladiosimulator.pcm.confidentiality.context.dsl.ConfContextDSL with org.eclipse.xtext.common.Terminals

import "http://www.palladiosimulator.org/pcm/confidentiality/context/0.1/" 
import "http://www.palladiosimulator.org/pcm/confidentiality/context/systemSpecification/0.1/" as system
import "http://www.palladiosimulator.org/pcm/confidentiality/context/policy/0.1/" as policy
import "http://www.palladiosimulator.org/pcm/confidentiality/context/systemcontext/0.1/" as systemcontext
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.palladiosimulator.org/pcm/confidentiality/context/specification/pcm/usage/0.1/" as usage
import "http://www.palladiosimulator.org/pcm/confidentiality/context/specification/pcm/structure/0.1/" as structure
import "http://palladiosimulator.org/PalladioComponentModel/ResourceEnvironment/5.2" as resourceenvironment
import "http://palladiosimulator.org/PalladioComponentModel/Core/Composition/5.2" as composition
import "http://palladiosimulator.org/PalladioComponentModel/Repository/5.2" as repository
import "http://palladiosimulator.org/PalladioComponentModel/SEFF/5.2" as seff
import "http://palladiosimulator.org/PalladioComponentModel/Core/Entity/5.2" as entity
import "http://www.eclipse.org/emf/2003/XMLType" as type
import "http://palladiosimulator.org/PalladioComponentModel/UsageModel/5.2" as usagemodel

PolicySet returns policy::PolicySet:
	'PolicySet'
	id=EString
	'{'
		'entityName' entityName=EString
		('combiningAlgorithm' combiningAlgorithm=PolicyCombiningAlgorithm)?
		('policyset' '{' policyset+=PolicySet ( "," policyset+=PolicySet)* '}' )?
		('policy' '{' policy+=Policy ( "," policy+=Policy)* '}' )?
		('target' '{' target+=AllOf ( "," target+=AllOf)* '}' )?
	'}';






Expression returns policy::Expression:
	Apply | AttributeSelector | FunctionReference | AttributeDesignator | XMLString | VariableReference | AttributeValueReference | SimpleAttributeCondition;

Attribute returns systemcontext::Attribute:
	SystemEntityAttribute | ExternalSystemAttribute | SimpleAttribute | XMLAttribute;



Entity returns entity::Entity:
	ResourceProvidedRole | ResourceInterfaceRequiringEntity_Impl | ResourceRequiredRole | ResourceInterfaceProvidingEntity_Impl | ResourceInterfaceProvidingRequiringEntity;






DataType returns repository::DataType:
	PrimitiveDataType | CollectionDataType | CompositeDataType;






Interface returns repository::Interface:
	EventGroup | InfrastructureInterface | OperationInterface;





FailureType returns reliability::FailureType:
	HardwareInducedFailureType | SoftwareInducedFailureType_Impl | NetworkInducedFailureType | ResourceTimeoutFailureType;







Unit returns units::Unit:
	BaseUnit | UnitMultiplication | UnitPower | UnitDivision;


SoftwareInducedFailureType returns reliability::SoftwareInducedFailureType:
	SoftwareInducedFailureType_Impl | ResourceTimeoutFailureType;




RepositoryComponent returns repository::RepositoryComponent:
	BasicComponent | CompleteComponentType | ProvidesComponentType | CompositeComponent;





AbstractNamedReference returns stoex::AbstractNamedReference:
	VariableReference0 | NamespaceReference;

ProvidedRole returns repository::ProvidedRole:
	SinkRole | OperationProvidedRole | InfrastructureProvidedRole;

RequiredRole returns repository::RequiredRole:
	InfrastructureRequiredRole | OperationRequiredRole | SourceRole;


ServiceEffectSpecification returns seff::ServiceEffectSpecification:
	ResourceDemandingSEFF;





Connector returns composition::Connector:
	EventChannelSourceConnector | EventChannelSinkConnector | ProvidedDelegationConnector | RequiredDelegationConnector | AssemblyConnector | AssemblyEventConnector | SourceDelegationConnector | SinkDelegationConnector | AssemblyInfrastructureConnector | ProvidedInfrastructureDelegationConnector | RequiredInfrastructureDelegationConnector | RequiredResourceDelegationConnector;

Signature returns repository::Signature:
	EventType | InfrastructureSignature | OperationSignature;

AbstractAction returns seff::AbstractAction:
	StopAction | BranchAction | StartAction | ReleaseAction | LoopAction | ForkAction | ExternalCallAction | AcquireAction | CollectionIteratorAction | SetVariableAction | InternalCallAction | EmitEventAction | InternalAction;





AbstractBranchTransition returns seff::AbstractBranchTransition:
	ProbabilisticBranchTransition | GuardedBranchTransition;

ResourceDemandingBehaviour returns seff::ResourceDemandingBehaviour:
	ResourceDemandingBehaviour_Impl | ResourceDemandingSEFF | ResourceDemandingInternalBehaviour | ForkedBehaviour;









EString returns ecore::EString:
	STRING | ID;

enum PolicyCombiningAlgorithm returns policy::PolicyCombiningAlgorithm:
				DENY_OVERRIDES = 'DENY_OVERRIDES' | PERMIT_OVERRIDES = 'PERMIT_OVERRIDES' | FIRST_APPLICABLE = 'FIRST_APPLICABLE' | ONLY_ONE_APPLICABLE = 'ONLY_ONE_APPLICABLE' | ORDERED_DENY_OVERRIDES = 'ORDERED_DENY_OVERRIDES' | ORDERED_PERMIT_OVERRIDES = 'ORDERED_PERMIT_OVERRIDES' | DENY_UNLESS_PERMIT = 'DENY_UNLESS_PERMIT' | PERMIT_UNLESS_DENY = 'PERMIT_UNLESS_DENY';

Policy returns policy::Policy:
	'Policy'
	id=EString
	'{'
		'entityName' entityName=EString
		('combiningAlgorithm' combiningAlgorithm=RuleCombiningAlgorihtm)?
		('rule' '{' rule+=Rule ( "," rule+=Rule)* '}' )?
		('variabledefinitions' '{' variabledefinitions+=VariableDefinitions ( "," variabledefinitions+=VariableDefinitions)* '}' )?
		('target' '{' target+=AllOf ( "," target+=AllOf)* '}' )?
	'}';

AllOf returns policy::AllOf:
	'AllOf'
	'{'
		'match' '{' match+=Match ( "," match+=Match)* '}' 
	'}';

enum RuleCombiningAlgorihtm returns policy::RuleCombiningAlgorihtm:
				DENY_OVERRIDES = 'DENY_OVERRIDES' | PERMIT_OVERRIDES = 'PERMIT_OVERRIDES' | FIRST_APPLICABLE = 'FIRST_APPLICABLE' | ONLY_ONE_APPLICABLE = 'ONLY_ONE_APPLICABLE' | ORDERED_DENY_OVERRIDES = 'ORDERED_DENY_OVERRIDES' | ORDERED_PERMIT_OVERRIDES = 'ORDERED_PERMIT_OVERRIDES' | DENY_UNLESS_PERMIT = 'DENY_UNLESS_PERMIT' | PERMIT_UNLESS_DENY = 'PERMIT_UNLESS_DENY';

Rule returns policy::Rule:
	'Rule'
	id=EString
	'{'
		'entityName' entityName=EString
		('permit' permit=PermitType)?
		('condition' condition=Expression)?
		('target' '{' target+=AllOf ( "," target+=AllOf)* '}' )?
	'}';

VariableDefinitions returns policy::VariableDefinitions:
	'VariableDefinitions'
	id=EString
	'{'
		'entityName' entityName=EString
		'expression' expression=Expression
	'}';

enum PermitType returns policy::PermitType:
				DENY = 'DENY' | PERMIT = 'PERMIT';

Apply returns policy::Apply:
	'Apply'
	id=EString
	'{'
		'entityName' entityName=EString
		('operation' operation=Operations)?
		('parameters' '{' parameters+=Expression ( "," parameters+=Expression)* '}' )?
	'}';

AttributeSelector returns policy::AttributeSelector:
	'AttributeSelector'
	id=EString
	'{'
		'entityName' entityName=EString
		('category' category=Category)?
		('mustBePresent' mustBePresent=Boolean)?
	'}';

FunctionReference returns policy::FunctionReference:
	'FunctionReference'
	id=EString
	'{'
		'entityName' entityName=EString
		'function' function=Operations
	'}';

AttributeDesignator returns policy::AttributeDesignator:
	'AttributeDesignator'
	id=EString
	'{'
		'entityName' entityName=EString
		('category' category=Category)?
		('mustBePresent' mustBePresent=Boolean)?
		('type' type=DataTypes)?
		'attribute' attribute=[systemcontext::Attribute|EString]
	'}';

XMLString returns policy::XMLString:
	'XMLString'
	id=EString
	'{'
		'entityName' entityName=EString
		('string' string=EString)?
	'}';

VariableReference returns policy::VariableReference:
	'VariableReference'
	id=EString
	'{'
		'entityName' entityName=EString
		'variabledefinitions' variabledefinitions=[policy::VariableDefinitions|EString]
	'}';

AttributeValueReference returns policy::AttributeValueReference:
	'AttributeValueReference'
	id=EString
	'{'
		'entityName' entityName=EString
		'attributevalue' attributevalue=[systemcontext::AttributeValue|EString]
	'}';

SimpleAttributeCondition returns policy::SimpleAttributeCondition:
	'SimpleAttributeCondition'
	id=EString
	'{'
		'entityName' entityName=EString
		('category' category=Category)?
		('mustBePresent' mustBePresent=Boolean)?
		'only' only=Boolean
		'attribute' attribute=[system::UsageSpecification|EString]
	'}';

enum Operations returns policy::Operations:
				STRING_EQUAL = 'STRING_EQUAL' | BOOLEAN_EQUAL = 'BOOLEAN_EQUAL' | INTEGER_EQUAL = 'INTEGER_EQUAL' | DOUBLE_EQUAL = 'DOUBLE_EQUAL' | DATE_EQUAL = 'DATE_EQUAL' | TIME_EQUAL = 'TIME_EQUAL' | DATETIME_EQUAL = 'DATETIME_EQUAL' | DAYTIMEDURATION_EQUAL = 'DAYTIMEDURATION_EQUAL' | YEARMONTHDURATION_EQUAL = 'YEARMONTHDURATION_EQUAL' | STRING_EQUAL_IGNORE_CASE = 'STRING_EQUAL_IGNORE_CASE' | ANYURI_EQUAL = 'ANYURI_EQUAL' | X500NAME_EQUAL = 'X500NAME_EQUAL' | RFC822NAME_EQUAL = 'RFC822NAME_EQUAL' | HEXBINARY_EQUAL = 'HEXBINARY_EQUAL' | BASE64BINARY_EQUAL = 'BASE64BINARY_EQUAL' | INTEGER_ADD = 'INTEGER_ADD' | DOUBLE_ADD = 'DOUBLE_ADD' | INTEGER_SUBTRACT = 'INTEGER_SUBTRACT' | DOUBLE_SUBTRACT = 'DOUBLE_SUBTRACT' | INTEGER_MULTIPLY = 'INTEGER_MULTIPLY' | DOUBLE_MULTIPLY = 'DOUBLE_MULTIPLY' | INTEGER_DIVIDE = 'INTEGER_DIVIDE' | DOUBLE_DIVIDE = 'DOUBLE_DIVIDE' | INTEGER_MOD = 'INTEGER_MOD' | INTEGER_ABS = 'INTEGER_ABS' | DOUBLE_ABS = 'DOUBLE_ABS' | ROUND = 'ROUND' | FLOOR = 'FLOOR' | STRING_NORMALIZE_SPACE = 'STRING_NORMALIZE_SPACE' | STRING_NORMALIZE_TO_LOWER_CASE = 'STRING_NORMALIZE_TO_LOWER_CASE' | DOUBLE_TO_INTEGER = 'DOUBLE_TO_INTEGER' | INTEGER_TO_DOUBLE = 'INTEGER_TO_DOUBLE' | OR = 'OR' | AND = 'AND' | N_OF = 'N_OF' | NOT = 'NOT' | PRESENT = 'PRESENT' | INTEGER_GREATER_THAN = 'INTEGER_GREATER_THAN' | INTEGER_GREATER_THAN_OR_EQUAL = 'INTEGER_GREATER_THAN_OR_EQUAL' | INTEGER_LESS_THAN = 'INTEGER_LESS_THAN' | INTEGER_LESS_THAN_OR_EQUAL = 'INTEGER_LESS_THAN_OR_EQUAL' | DOUBLE_GREATER_THAN = 'DOUBLE_GREATER_THAN' | DOUBLE_GREATER_THAN_OR_EQUAL = 'DOUBLE_GREATER_THAN_OR_EQUAL' | DOUBLE_LESS_THAN = 'DOUBLE_LESS_THAN' | DOUBLE_LESS_THAN_OR_EQUAL = 'DOUBLE_LESS_THAN_OR_EQUAL' | DATETIME_ADD_DAYTIMEDURATION = 'DATETIME_ADD_DAYTIMEDURATION' | DATETIME_ADD_YEARMONTHDURATION = 'DATETIME_ADD_YEARMONTHDURATION' | DATETIME_SUBTRACT_DAYTIMEDURATION = 'DATETIME_SUBTRACT_DAYTIMEDURATION' | DATETIME_SUBTRACT_YEARMONTHDURATION = 'DATETIME_SUBTRACT_YEARMONTHDURATION' | DATE_ADD_YEARMONTHDURATION = 'DATE_ADD_YEARMONTHDURATION' | DATE_SUBTRACT_YEARMONTHDURATION = 'DATE_SUBTRACT_YEARMONTHDURATION' | STRING_GREATER_THAN = 'STRING_GREATER_THAN' | STRING_GREATER_THAN_OR_EQUAL = 'STRING_GREATER_THAN_OR_EQUAL' | STRING_LESS_THAN = 'STRING_LESS_THAN' | STRING_LESS_THAN_OR_EQUAL = 'STRING_LESS_THAN_OR_EQUAL' | TIME_GREATER_THAN = 'TIME_GREATER_THAN' | TIME_GREATER_THAN_OR_EQUAL = 'TIME_GREATER_THAN_OR_EQUAL' | TIME_LESS_THAN = 'TIME_LESS_THAN' | TIME_LESS_THAN_OR_EQUAL = 'TIME_LESS_THAN_OR_EQUAL' | TIME_IN_RANGE = 'TIME_IN_RANGE' | DATETIME_GREATER_THAN = 'DATETIME_GREATER_THAN' | DATETIME_GREATER_THAN_OR_EQUAL = 'DATETIME_GREATER_THAN_OR_EQUAL' | DATETIME_LESS_THAN = 'DATETIME_LESS_THAN' | DATETIME_LESS_THAN_OR_EQUAL = 'DATETIME_LESS_THAN_OR_EQUAL' | DATE_GREATER_THAN = 'DATE_GREATER_THAN' | DATE_GREATER_THAN_OR_EQUAL = 'DATE_GREATER_THAN_OR_EQUAL' | DATE_LESS_THAN = 'DATE_LESS_THAN' | DATE_LESS_THAN_OR_EQUAL = 'DATE_LESS_THAN_OR_EQUAL' | STRING_ONE_AND_ONLY = 'STRING_ONE_AND_ONLY' | STRING_BAG_SIZE = 'STRING_BAG_SIZE' | STRING_IS_IN = 'STRING_IS_IN' | STRING_BAG = 'STRING_BAG' | BOOLEAN_ONE_AND_ONLY = 'BOOLEAN_ONE_AND_ONLY' | BOOLEAN_BAG_SIZE = 'BOOLEAN_BAG_SIZE' | BOOLEAN_IS_IN = 'BOOLEAN_IS_IN' | BOOLEAN_BAG = 'BOOLEAN_BAG' | INTEGER_ONE_AND_ONLY = 'INTEGER_ONE_AND_ONLY' | INTEGER_BAG_SIZE = 'INTEGER_BAG_SIZE' | INTEGER_IS_IN = 'INTEGER_IS_IN' | INTEGER_BAG = 'INTEGER_BAG' | DOUBLE_ONE_AND_ONLY = 'DOUBLE_ONE_AND_ONLY' | DOUBLE_BAG_SIZE = 'DOUBLE_BAG_SIZE' | DOUBLE_IS_IN = 'DOUBLE_IS_IN' | DOUBLE_BAG = 'DOUBLE_BAG' | TIME_ONE_AND_ONLY = 'TIME_ONE_AND_ONLY' | TIME_BAG_SIZE = 'TIME_BAG_SIZE' | TIME_IS_IN = 'TIME_IS_IN' | TIME_BAG = 'TIME_BAG' | DATE_ONE_AND_ONLY = 'DATE_ONE_AND_ONLY' | DATE_BAG_SIZE = 'DATE_BAG_SIZE' | DATE_IS_IN = 'DATE_IS_IN' | DATE_BAG = 'DATE_BAG' | DATETIME_ONE_AND_ONLY = 'DATETIME_ONE_AND_ONLY' | DATETIME_BAG_SIZE = 'DATETIME_BAG_SIZE' | DATETIME_IS_IN = 'DATETIME_IS_IN' | DATETIME_BAG = 'DATETIME_BAG' | ANYURI_ONE_AND_ONLY = 'ANYURI_ONE_AND_ONLY' | ANYURI_BAG_SIZE = 'ANYURI_BAG_SIZE' | ANYURI_IS_IN = 'ANYURI_IS_IN' | ANYURI_BAG = 'ANYURI_BAG' | HEXBINARY_ONE_AND_ONLY = 'HEXBINARY_ONE_AND_ONLY' | HEXBINARY_BAG_SIZE = 'HEXBINARY_BAG_SIZE' | HEXBINARY_IS_IN = 'HEXBINARY_IS_IN' | HEXBINARY_BAG = 'HEXBINARY_BAG' | BASE64BINARY_ONE_AND_ONLY = 'BASE64BINARY_ONE_AND_ONLY' | BASE64BINARY_BAG_SIZE = 'BASE64BINARY_BAG_SIZE' | BASE64BINARY_IS_IN = 'BASE64BINARY_IS_IN' | BASE64BINARY_BAG = 'BASE64BINARY_BAG' | DAYTIMEDURATION_ONE_AND_ONLY = 'DAYTIMEDURATION_ONE_AND_ONLY' | DAYTIMEDURATION_BAG_SIZE = 'DAYTIMEDURATION_BAG_SIZE' | DAYTIMEDURATION_IS_IN = 'DAYTIMEDURATION_IS_IN' | DAYTIMEDURATION_BAG = 'DAYTIMEDURATION_BAG' | YEARMONTHDURATION_ONE_AND_ONLY = 'YEARMONTHDURATION_ONE_AND_ONLY' | YEARMONTHDURATION_BAG_SIZE = 'YEARMONTHDURATION_BAG_SIZE' | YEARMONTHDURATION_IS_IN = 'YEARMONTHDURATION_IS_IN' | YEARMONTHDURATION_BAG = 'YEARMONTHDURATION_BAG' | X500NAME_ONE_AND_ONLY = 'X500NAME_ONE_AND_ONLY' | X500NAME_BAG_SIZE = 'X500NAME_BAG_SIZE' | X500NAME_IS_IN = 'X500NAME_IS_IN' | X500NAME_BAG = 'X500NAME_BAG' | RFC822NAME_ONE_AND_ONLY = 'RFC822NAME_ONE_AND_ONLY' | RFC822NAME_BAG_SIZE = 'RFC822NAME_BAG_SIZE' | RFC822NAME_IS_IN = 'RFC822NAME_IS_IN' | RFC822NAME_BAG = 'RFC822NAME_BAG' | IPADDRESS_ONE_AND_ONLY = 'IPADDRESS_ONE_AND_ONLY' | IPADDRESS_BAG_SIZE = 'IPADDRESS_BAG_SIZE' | IPADDRESS_IS_IN = 'IPADDRESS_IS_IN' | IPADDRESS_BAG = 'IPADDRESS_BAG' | DNSNAME_ONE_AND_ONLY = 'DNSNAME_ONE_AND_ONLY' | DNSNAME_BAG_SIZE = 'DNSNAME_BAG_SIZE' | DNSNAME_IS_IN = 'DNSNAME_IS_IN' | DNSNAME_BAG = 'DNSNAME_BAG' | STRING_CONCATENATE = 'STRING_CONCATENATE' | BOOLEAN_FROM_STRING = 'BOOLEAN_FROM_STRING' | STRING_FROM_BOOLEAN = 'STRING_FROM_BOOLEAN' | INTEGER_FROM_STRING = 'INTEGER_FROM_STRING' | STRING_FROM_INTEGER = 'STRING_FROM_INTEGER' | DOUBLE_FROM_STRING = 'DOUBLE_FROM_STRING' | STRING_FROM_DOUBLE = 'STRING_FROM_DOUBLE' | TIME_FROM_STRING = 'TIME_FROM_STRING' | STRING_FROM_TIME = 'STRING_FROM_TIME' | DATE_FROM_STRING = 'DATE_FROM_STRING' | STRING_FROM_DATE = 'STRING_FROM_DATE' | DATETIME_FROM_STRING = 'DATETIME_FROM_STRING' | STRING_FROM_DATETIME = 'STRING_FROM_DATETIME' | ANYURI_FROM_STRING = 'ANYURI_FROM_STRING' | STRING_FROM_ANYURI = 'STRING_FROM_ANYURI' | DAYTIMEDURATION_FROM_STRING = 'DAYTIMEDURATION_FROM_STRING' | STRING_FROM_DAYTIMEDURATION = 'STRING_FROM_DAYTIMEDURATION' | YEARMONTHDURATION_FROM_STRING = 'YEARMONTHDURATION_FROM_STRING' | STRING_FROM_YEARMONTHDURATION = 'STRING_FROM_YEARMONTHDURATION' | X500NAME_FROM_STRING = 'X500NAME_FROM_STRING' | STRING_FROM_X500NAME = 'STRING_FROM_X500NAME' | RFC822NAME_FROM_STRING = 'RFC822NAME_FROM_STRING' | STRING_FROM_RFC822NAME = 'STRING_FROM_RFC822NAME' | IPADDRESS_FROM_STRING = 'IPADDRESS_FROM_STRING' | STRING_FROM_IPADDRESS = 'STRING_FROM_IPADDRESS' | DNSNAME_FROM_STRING = 'DNSNAME_FROM_STRING' | STRING_FROM_DNSNAME = 'STRING_FROM_DNSNAME' | STRING_STARTS_WITH = 'STRING_STARTS_WITH' | ANYURI_STARTS_WITH = 'ANYURI_STARTS_WITH' | STRING_ENDS_WITH = 'STRING_ENDS_WITH' | ANYURI_ENDS_WITH = 'ANYURI_ENDS_WITH' | STRING_CONTAINS = 'STRING_CONTAINS' | ANYURI_CONTAINS = 'ANYURI_CONTAINS' | STRING_SUBSTRING = 'STRING_SUBSTRING' | ANYURI_SUBSTRING = 'ANYURI_SUBSTRING' | ANY_OF = 'ANY_OF' | ALL_OF = 'ALL_OF' | ANY_OF_ANY = 'ANY_OF_ANY' | ALL_OF_ANY = 'ALL_OF_ANY' | ANY_OF_ALL = 'ANY_OF_ALL' | ALL_OF_ALL = 'ALL_OF_ALL' | MAP = 'MAP' | X500NAME_MATCH = 'X500NAME_MATCH' | RFC822NAME_MATCH = 'RFC822NAME_MATCH' | STRING_REGEXP_MATCH = 'STRING_REGEXP_MATCH' | ANYURI_REGEXP_MATCH = 'ANYURI_REGEXP_MATCH' | IPADDRESS_REGEXP_MATCH = 'IPADDRESS_REGEXP_MATCH' | DNSNAME_REGEXP_MATCH = 'DNSNAME_REGEXP_MATCH' | RFC822NAME_REGEXP_MATCH = 'RFC822NAME_REGEXP_MATCH' | X500NAME_REGEXP_MATCH = 'X500NAME_REGEXP_MATCH' | XPATH_NODE_COUNT = 'XPATH_NODE_COUNT' | XPATH_NODE_EQUAL = 'XPATH_NODE_EQUAL' | XPATH_NODE_MATCH = 'XPATH_NODE_MATCH' | STRING_INTERSECTION = 'STRING_INTERSECTION' | STRING_AT_LEAST_ONE_MEMBER_OF = 'STRING_AT_LEAST_ONE_MEMBER_OF' | STRING_UNION = 'STRING_UNION' | STRING_SUBSET = 'STRING_SUBSET' | STRING_SET_EQUALS = 'STRING_SET_EQUALS' | BOOLEAN_INTERSECTION = 'BOOLEAN_INTERSECTION' | BOOLEAN_AT_LEAST_ONE_MEMBER_OF = 'BOOLEAN_AT_LEAST_ONE_MEMBER_OF' | BOOLEAN_UNION = 'BOOLEAN_UNION' | BOOLEAN_SUBSET = 'BOOLEAN_SUBSET' | BOOLEAN_SET_EQUALS = 'BOOLEAN_SET_EQUALS' | INTEGER_INTERSECTION = 'INTEGER_INTERSECTION' | INTEGER_AT_LEAST_ONE_MEMBER_OF = 'INTEGER_AT_LEAST_ONE_MEMBER_OF' | INTEGER_UNION = 'INTEGER_UNION' | INTEGER_SUBSET = 'INTEGER_SUBSET' | INTEGER_SET_EQUALS = 'INTEGER_SET_EQUALS' | DOUBLE_INTERSECTION = 'DOUBLE_INTERSECTION' | DOUBLE_AT_LEAST_ONE_MEMBER_OF = 'DOUBLE_AT_LEAST_ONE_MEMBER_OF' | DOUBLE_UNION = 'DOUBLE_UNION' | DOUBLE_SUBSET = 'DOUBLE_SUBSET' | DOUBLE_SET_EQUALS = 'DOUBLE_SET_EQUALS' | TIME_INTERSECTION = 'TIME_INTERSECTION' | TIME_AT_LEAST_ONE_MEMBER_OF = 'TIME_AT_LEAST_ONE_MEMBER_OF' | TIME_UNION = 'TIME_UNION' | TIME_SUBSET = 'TIME_SUBSET' | TIME_SET_EQUALS = 'TIME_SET_EQUALS' | DATE_INTERSECTION = 'DATE_INTERSECTION' | DATE_AT_LEAST_ONE_MEMBER_OF = 'DATE_AT_LEAST_ONE_MEMBER_OF' | DATE_UNION = 'DATE_UNION' | DATE_SUBSET = 'DATE_SUBSET' | DATE_SET_EQUALS = 'DATE_SET_EQUALS' | DATETIME_INTERSECTION = 'DATETIME_INTERSECTION' | DATETIME_AT_LEAST_ONE_MEMBER_OF = 'DATETIME_AT_LEAST_ONE_MEMBER_OF' | DATETIME_UNION = 'DATETIME_UNION' | DATETIME_SUBSET = 'DATETIME_SUBSET' | DATETIME_SET_EQUALS = 'DATETIME_SET_EQUALS' | ANYURI_INTERSECTION = 'ANYURI_INTERSECTION' | ANYURI_AT_LEAST_ONE_MEMBER_OF = 'ANYURI_AT_LEAST_ONE_MEMBER_OF' | ANYURI_UNION = 'ANYURI_UNION' | ANYURI_SUBSET = 'ANYURI_SUBSET' | ANYURI_SET_EQUALS = 'ANYURI_SET_EQUALS' | HEXBINARY_INTERSECTION = 'HEXBINARY_INTERSECTION' | HEXBINARY_AT_LEAST_ONE_MEMBER_OF = 'HEXBINARY_AT_LEAST_ONE_MEMBER_OF' | HEXBINARY_UNION = 'HEXBINARY_UNION' | HEXBINARY_SUBSET = 'HEXBINARY_SUBSET' | HEXBINARY_SET_EQUALS = 'HEXBINARY_SET_EQUALS' | BASE64BINARY_INTERSECTION = 'BASE64BINARY_INTERSECTION' | BASE64BINARY_AT_LEAST_ONE_MEMBER_OF = 'BASE64BINARY_AT_LEAST_ONE_MEMBER_OF' | BASE64BINARY_UNION = 'BASE64BINARY_UNION' | BASE64BINARY_SUBSET = 'BASE64BINARY_SUBSET' | BASE64BINARY_SET_EQUALS = 'BASE64BINARY_SET_EQUALS' | DAYTIMEDURATION_INTERSECTION = 'DAYTIMEDURATION_INTERSECTION' | DAYTIMEDURATION_AT_LEAST_ONE_MEMBER_OF = 'DAYTIMEDURATION_AT_LEAST_ONE_MEMBER_OF' | DAYTIMEDURATION_UNION = 'DAYTIMEDURATION_UNION' | DAYTIMEDURATION_SUBSET = 'DAYTIMEDURATION_SUBSET' | DAYTIMEDURATION_SET_EQUALS = 'DAYTIMEDURATION_SET_EQUALS' | YEARMONTHDURATION_INTERSECTION = 'YEARMONTHDURATION_INTERSECTION' | YEARMONTHDURATION_AT_LEAST_ONE_MEMBER_OF = 'YEARMONTHDURATION_AT_LEAST_ONE_MEMBER_OF' | YEARMONTHDURATION_UNION = 'YEARMONTHDURATION_UNION' | YEARMONTHDURATION_SUBSET = 'YEARMONTHDURATION_SUBSET' | YEARMONTHDURATION_SET_EQUALS = 'YEARMONTHDURATION_SET_EQUALS' | X500NAME_INTERSECTION = 'X500NAME_INTERSECTION' | X500NAME_AT_LEAST_ONE_MEMBER_OF = 'X500NAME_AT_LEAST_ONE_MEMBER_OF' | X500NAME_UNION = 'X500NAME_UNION' | X500NAME_SUBSET = 'X500NAME_SUBSET' | X500NAME_SET_EQUALS = 'X500NAME_SET_EQUALS' | RFC822NAME_INTERSECTION = 'RFC822NAME_INTERSECTION' | RFC822NAME_AT_LEAST_ONE_MEMBER_OF = 'RFC822NAME_AT_LEAST_ONE_MEMBER_OF' | RFC822NAME_UNION = 'RFC822NAME_UNION' | RFC822NAME_SUBSET = 'RFC822NAME_SUBSET' | RFC822NAME_SET_EQUALS = 'RFC822NAME_SET_EQUALS' | IPADDRESS_INTERSECTION = 'IPADDRESS_INTERSECTION' | IPADDRESS_AT_LEAST_ONE_MEMBER_OF = 'IPADDRESS_AT_LEAST_ONE_MEMBER_OF' | IPADDRESS_UNION = 'IPADDRESS_UNION' | IPADDRESS_SUBSET = 'IPADDRESS_SUBSET' | IPADDRESS_SET_EQUALS = 'IPADDRESS_SET_EQUALS' | DNSNAME_INTERSECTION = 'DNSNAME_INTERSECTION' | DNSNAME_AT_LEAST_ONE_MEMBER_OF = 'DNSNAME_AT_LEAST_ONE_MEMBER_OF' | DNSNAME_UNION = 'DNSNAME_UNION' | DNSNAME_SUBSET = 'DNSNAME_SUBSET' | DNSNAME_SET_EQUALS = 'DNSNAME_SET_EQUALS';

enum Category returns policy::Category:
				SUBJECT = 'SUBJECT' | RESOURCE = 'RESOURCE' | ENVIRONMENT = 'ENVIRONMENT' | ACTION = 'ACTION';

Boolean returns type::Boolean:
	'Boolean' /* TODO: implement this rule and an appropriate IValueConverter */;

enum DataTypes returns systemcontext::DataTypes:
				String = 'String' | Boolean = 'Boolean' | Integer = 'Integer' | Double = 'Double' | Date = 'Date';

AttributeValue returns systemcontext::AttributeValue:
	'AttributeValue'
	id=EString
	'{'
		'entityName' entityName=EString
		'type' type=DataTypes
		'values' '{' values+=EDataType ( "," values+=EDataType)* '}' 
	'}';

SystemEntityAttribute returns systemcontext::SystemEntityAttribute:
	'SystemEntityAttribute'
	id=EString
	'{'
		'entityName' entityName=EString
		'modelEntity' modelEntity=[entity::Entity|EString]
		'attributevalue' '{' attributevalue+=AttributeValue ( "," attributevalue+=AttributeValue)* '}' 
	'}';

ExternalSystemAttribute returns systemcontext::ExternalSystemAttribute:
	environment?='environment'
	'ExternalSystemAttribute'
	id=EString
	'{'
		'entityName' entityName=EString
		'externalName' externalName=String0
		'attributevalue' '{' attributevalue+=AttributeValue ( "," attributevalue+=AttributeValue)* '}' 
	'}';

SimpleAttribute returns systemcontext::SimpleAttribute:
	environment?='environment'
	'SimpleAttribute'
	id=EString
	'{'
		'entityName' entityName=EString
		'attributevalue' '{' attributevalue+=AttributeValue ( "," attributevalue+=AttributeValue)* '}' 
	'}';

XMLAttribute returns systemcontext::XMLAttribute:
	'XMLAttribute'
	id=EString
	'{'
		'entityName' entityName=EString
		'xmlString' xmlString=String0
		'attributevalue' '{' attributevalue+=AttributeValue ( "," attributevalue+=AttributeValue)* '}' 
	'}';

EDataType returns :
	'null' /* TODO: implement this rule and an appropriate IValueConverter */;

ResourceProvidedRole returns entity::ResourceProvidedRole:
	'ResourceProvidedRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'providedResourceInterface__ResourceProvidedRole' providedResourceInterface__ResourceProvidedRole=[resourcetype::ResourceInterface|EString]
	'}';

ResourceInterfaceRequiringEntity_Impl returns entity::ResourceInterfaceRequiringEntity:
	'ResourceInterfaceRequiringEntity'
	id=EString
	'{'
		'entityName' entityName=EString
		('resourceRequiredRoles__ResourceInterfaceRequiringEntity' '{' resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole ( "," resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole)* '}' )?
	'}';

ResourceRequiredRole returns entity::ResourceRequiredRole:
	'ResourceRequiredRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'requiredResourceInterface__ResourceRequiredRole' requiredResourceInterface__ResourceRequiredRole=[resourcetype::ResourceInterface|EString]
	'}';

ResourceInterfaceProvidingEntity_Impl returns entity::ResourceInterfaceProvidingEntity:
	'ResourceInterfaceProvidingEntity'
	id=EString
	'{'
		'entityName' entityName=EString
		('resourceProvidedRoles__ResourceInterfaceProvidingEntity' '{' resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole ( "," resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole)* '}' )?
	'}';

ResourceInterfaceProvidingRequiringEntity returns entity::ResourceInterfaceProvidingRequiringEntity:
	'ResourceInterfaceProvidingRequiringEntity'
	id=EString
	'{'
		'entityName' entityName=EString
		('resourceRequiredRoles__ResourceInterfaceRequiringEntity' '{' resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole ( "," resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole)* '}' )?
		('resourceProvidedRoles__ResourceInterfaceProvidingEntity' '{' resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole ( "," resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole)* '}' )?
	'}';

ResourceInterface returns resourcetype::ResourceInterface:
	'ResourceInterface'
	id=EString
	'{'
		'entityName' entityName=EString
		('resourceSignatures__ResourceInterface' '{' resourceSignatures__ResourceInterface+=ResourceSignature ( "," resourceSignatures__ResourceInterface+=ResourceSignature)* '}' )?
	'}';

ResourceSignature returns resourcetype::ResourceSignature:
	'ResourceSignature'
	id=EString
	'{'
		'entityName' entityName=EString
		'resourceServiceId' resourceServiceId=EInt
		('parameter__ResourceSignature' '{' parameter__ResourceSignature+=Parameter ( "," parameter__ResourceSignature+=Parameter)* '}' )?
	'}';

Parameter returns repository::Parameter:
	'Parameter'
	'{'
		'parameterName' parameterName=EString
		'modifier__Parameter' modifier__Parameter=ParameterModifier
		'dataType__Parameter' dataType__Parameter=[repository::DataType|EString]
	'}';

EInt returns ecore::EInt:
	'-'? INT;

enum ParameterModifier returns repository::ParameterModifier:
				none = 'none' | in = 'in' | out = 'out' | inout = 'inout';

PrimitiveDataType returns repository::PrimitiveDataType:
	'PrimitiveDataType'
	'{'
		'type' type=PrimitiveTypeEnum
	'}';

CollectionDataType returns repository::CollectionDataType:
	'CollectionDataType'
	id=EString
	'{'
		'entityName' entityName=EString
		'innerType_CollectionDataType' innerType_CollectionDataType=[repository::DataType|EString]
	'}';

CompositeDataType returns repository::CompositeDataType:
	'CompositeDataType'
	id=EString
	'{'
		'entityName' entityName=EString
		('parentType_CompositeDataType' '(' parentType_CompositeDataType+=[repository::CompositeDataType|EString] ( "," parentType_CompositeDataType+=[repository::CompositeDataType|EString])* ')' )?
		('innerDeclaration_CompositeDataType' '{' innerDeclaration_CompositeDataType+=InnerDeclaration ( "," innerDeclaration_CompositeDataType+=InnerDeclaration)* '}' )?
	'}';

enum PrimitiveTypeEnum returns repository::PrimitiveTypeEnum:
				INT = 'INT' | STRING = 'STRING' | BOOL = 'BOOL' | DOUBLE = 'DOUBLE' | CHAR = 'CHAR' | BYTE = 'BYTE' | LONG = 'LONG';

InnerDeclaration returns repository::InnerDeclaration:
	'InnerDeclaration'
	'{'
		'entityName' entityName=EString
		'datatype_InnerDeclaration' datatype_InnerDeclaration=[repository::DataType|EString]
	'}';

SinkRole returns repository::SinkRole:
	'SinkRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'eventGroup__SinkRole' eventGroup__SinkRole=[repository::EventGroup|EString]
	'}';

OperationProvidedRole returns repository::OperationProvidedRole:
	'OperationProvidedRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'providedInterface__OperationProvidedRole' providedInterface__OperationProvidedRole=[repository::OperationInterface|EString]
	'}';

InfrastructureProvidedRole returns repository::InfrastructureProvidedRole:
	'InfrastructureProvidedRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'providedInterface__InfrastructureProvidedRole' providedInterface__InfrastructureProvidedRole=[repository::InfrastructureInterface|EString]
	'}';

EventGroup returns repository::EventGroup:
	'EventGroup'
	id=EString
	'{'
		'entityName' entityName=EString
		('parentInterfaces__Interface' '(' parentInterfaces__Interface+=[repository::Interface|EString] ( "," parentInterfaces__Interface+=[repository::Interface|EString])* ')' )?
		('protocols__Interface' '{' protocols__Interface+=Protocol ( "," protocols__Interface+=Protocol)* '}' )?
		('requiredCharacterisations' '{' requiredCharacterisations+=RequiredCharacterisation ( "," requiredCharacterisations+=RequiredCharacterisation)* '}' )?
		('eventTypes__EventGroup' '{' eventTypes__EventGroup+=EventType ( "," eventTypes__EventGroup+=EventType)* '}' )?
	'}';

RequiredCharacterisation returns repository::RequiredCharacterisation:
	'RequiredCharacterisation'
	'{'
		'type' type=VariableCharacterisationType
		'parameter' parameter=[repository::Parameter|EString]
	'}';

EventType returns repository::EventType:
	'EventType'
	id=EString
	'{'
		'entityName' entityName=EString
		('failureType' '(' failureType+=[reliability::FailureType|EString] ( "," failureType+=[reliability::FailureType|EString])* ')' )?
		('exceptions__Signature' '{' exceptions__Signature+=ExceptionType ( "," exceptions__Signature+=ExceptionType)* '}' )?
		'parameter__EventType' parameter__EventType=Parameter
	'}';

InfrastructureInterface returns repository::InfrastructureInterface:
	'InfrastructureInterface'
	id=EString
	'{'
		'entityName' entityName=EString
		('parentInterfaces__Interface' '(' parentInterfaces__Interface+=[repository::Interface|EString] ( "," parentInterfaces__Interface+=[repository::Interface|EString])* ')' )?
		('protocols__Interface' '{' protocols__Interface+=Protocol ( "," protocols__Interface+=Protocol)* '}' )?
		('requiredCharacterisations' '{' requiredCharacterisations+=RequiredCharacterisation ( "," requiredCharacterisations+=RequiredCharacterisation)* '}' )?
		('infrastructureSignatures__InfrastructureInterface' '{' infrastructureSignatures__InfrastructureInterface+=InfrastructureSignature ( "," infrastructureSignatures__InfrastructureInterface+=InfrastructureSignature)* '}' )?
	'}';

OperationInterface returns repository::OperationInterface:
	'OperationInterface'
	id=EString
	'{'
		'entityName' entityName=EString
		('parentInterfaces__Interface' '(' parentInterfaces__Interface+=[repository::Interface|EString] ( "," parentInterfaces__Interface+=[repository::Interface|EString])* ')' )?
		('protocols__Interface' '{' protocols__Interface+=Protocol ( "," protocols__Interface+=Protocol)* '}' )?
		('requiredCharacterisations' '{' requiredCharacterisations+=RequiredCharacterisation ( "," requiredCharacterisations+=RequiredCharacterisation)* '}' )?
		('signatures__OperationInterface' '{' signatures__OperationInterface+=OperationSignature ( "," signatures__OperationInterface+=OperationSignature)* '}' )?
	'}';

InfrastructureSignature returns repository::InfrastructureSignature:
	'InfrastructureSignature'
	id=EString
	'{'
		'entityName' entityName=EString
		('failureType' '(' failureType+=[reliability::FailureType|EString] ( "," failureType+=[reliability::FailureType|EString])* ')' )?
		('exceptions__Signature' '{' exceptions__Signature+=ExceptionType ( "," exceptions__Signature+=ExceptionType)* '}' )?
		('parameters__InfrastructureSignature' '{' parameters__InfrastructureSignature+=Parameter ( "," parameters__InfrastructureSignature+=Parameter)* '}' )?
	'}';

ExceptionType returns repository::ExceptionType:
	'ExceptionType'
	'{'
		'exceptionName' exceptionName=EString
		'exceptionMessage' exceptionMessage=EString
	'}';

HardwareInducedFailureType returns reliability::HardwareInducedFailureType:
	'HardwareInducedFailureType'
	id=EString
	'{'
		'entityName' entityName=EString
		'processingResourceType__HardwareInducedFailureType' processingResourceType__HardwareInducedFailureType=[resourcetype::ProcessingResourceType|EString]
	'}';

SoftwareInducedFailureType_Impl returns reliability::SoftwareInducedFailureType:
	'SoftwareInducedFailureType'
	id=EString
	'{'
		'entityName' entityName=EString
		('internalFailureOccurrenceDescriptions__SoftwareInducedFailureType' '(' internalFailureOccurrenceDescriptions__SoftwareInducedFailureType+=[reliability::InternalFailureOccurrenceDescription|EString] ( "," internalFailureOccurrenceDescriptions__SoftwareInducedFailureType+=[reliability::InternalFailureOccurrenceDescription|EString])* ')' )?
	'}';

NetworkInducedFailureType returns reliability::NetworkInducedFailureType:
	'NetworkInducedFailureType'
	id=EString
	'{'
		'entityName' entityName=EString
		'communicationLinkResourceType__NetworkInducedFailureType' communicationLinkResourceType__NetworkInducedFailureType=[resourcetype::CommunicationLinkResourceType|EString]
	'}';

ResourceTimeoutFailureType returns reliability::ResourceTimeoutFailureType:
	'ResourceTimeoutFailureType'
	id=EString
	'{'
		'entityName' entityName=EString
		('internalFailureOccurrenceDescriptions__SoftwareInducedFailureType' '(' internalFailureOccurrenceDescriptions__SoftwareInducedFailureType+=[reliability::InternalFailureOccurrenceDescription|EString] ( "," internalFailureOccurrenceDescriptions__SoftwareInducedFailureType+=[reliability::InternalFailureOccurrenceDescription|EString])* ')' )?
		'passiveResource__ResourceTimeoutFailureType' passiveResource__ResourceTimeoutFailureType=[repository::PassiveResource|EString]
	'}';

ProcessingResourceType returns resourcetype::ProcessingResourceType:
	'ProcessingResourceType'
	id=EString
	'{'
		'entityName' entityName=EString
		('hardwareInducedFailureType__ProcessingResourceType' hardwareInducedFailureType__ProcessingResourceType=[reliability::HardwareInducedFailureType|EString])?
		('unit' unit=Unit)?
		('resourceProvidedRoles__ResourceInterfaceProvidingEntity' '{' resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole ( "," resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole)* '}' )?
	'}';

BaseUnit returns units::BaseUnit:
	{units::BaseUnit}
	'BaseUnit'
	name=UnitNames;

UnitMultiplication returns units::UnitMultiplication:
	'UnitMultiplication'
	'{'
		'units' '{' units+=Unit ( "," units+=Unit)* '}' 
	'}';

UnitPower returns units::UnitPower:
	'UnitPower'
	'{'
		'exponent' exponent=EInt
		'unit' unit=Unit
	'}';

UnitDivision returns units::UnitDivision:
	'UnitDivision'
	'{'
		'dividend' dividend=Unit
		'divisor' divisor=Unit
	'}';

enum UnitNames returns units::UnitNames:
				UNITLESS = 'UNITLESS' | BYTE = 'BYTE' | SECOND = 'SECOND' | METER = 'METER';

InternalFailureOccurrenceDescription returns reliability::InternalFailureOccurrenceDescription:
	'InternalFailureOccurrenceDescription'
	'{'
		'failureProbability' failureProbability=EDouble
		'softwareInducedFailureType__InternalFailureOccurrenceDescription' softwareInducedFailureType__InternalFailureOccurrenceDescription=[reliability::SoftwareInducedFailureType|EString]
	'}';

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

CommunicationLinkResourceType returns resourcetype::CommunicationLinkResourceType:
	'CommunicationLinkResourceType'
	id=EString
	'{'
		'entityName' entityName=EString
		('networkInducedFailureType__CommunicationLinkResourceType' networkInducedFailureType__CommunicationLinkResourceType=[reliability::NetworkInducedFailureType|EString])?
		('unit' unit=Unit)?
		('resourceProvidedRoles__ResourceInterfaceProvidingEntity' '{' resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole ( "," resourceProvidedRoles__ResourceInterfaceProvidingEntity+=ResourceProvidedRole)* '}' )?
	'}';

PassiveResource returns repository::PassiveResource:
	'PassiveResource'
	id=EString
	'{'
		'entityName' entityName=EString
		('resourceTimeoutFailureType__PassiveResource' resourceTimeoutFailureType__PassiveResource=[reliability::ResourceTimeoutFailureType|EString])?
		'capacity_PassiveResource' capacity_PassiveResource=PCMRandomVariable
	'}';

PCMRandomVariable returns core::PCMRandomVariable:
	'PCMRandomVariable'
	'{'
		'specification' specification=EString
	'}';

OperationSignature returns repository::OperationSignature:
	'OperationSignature'
	id=EString
	'{'
		'entityName' entityName=EString
		('failureType' '(' failureType+=[reliability::FailureType|EString] ( "," failureType+=[reliability::FailureType|EString])* ')' )?
		('returnType__OperationSignature' returnType__OperationSignature=[repository::DataType|EString])?
		('exceptions__Signature' '{' exceptions__Signature+=ExceptionType ( "," exceptions__Signature+=ExceptionType)* '}' )?
		('parameters__OperationSignature' '{' parameters__OperationSignature+=Parameter ( "," parameters__OperationSignature+=Parameter)* '}' )?
	'}';

enum VariableCharacterisationType returns parameter::VariableCharacterisationType:
				STRUCTURE = 'STRUCTURE' | NUMBER_OF_ELEMENTS = 'NUMBER_OF_ELEMENTS' | VALUE = 'VALUE' | BYTESIZE = 'BYTESIZE' | TYPE = 'TYPE';

InfrastructureRequiredRole returns repository::InfrastructureRequiredRole:
	'InfrastructureRequiredRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'requiredInterface__InfrastructureRequiredRole' requiredInterface__InfrastructureRequiredRole=[repository::InfrastructureInterface|EString]
	'}';

OperationRequiredRole returns repository::OperationRequiredRole:
	'OperationRequiredRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'requiredInterface__OperationRequiredRole' requiredInterface__OperationRequiredRole=[repository::OperationInterface|EString]
	'}';

SourceRole returns repository::SourceRole:
	'SourceRole'
	id=EString
	'{'
		'entityName' entityName=EString
		'eventGroup__SourceRole' eventGroup__SourceRole=[repository::EventGroup|EString]
	'}';

AssemblyContext returns composition::AssemblyContext:
	'AssemblyContext'
	id=EString
	'{'
		'entityName' entityName=EString
		'encapsulatedComponent__AssemblyContext' encapsulatedComponent__AssemblyContext=[repository::RepositoryComponent|EString]
		('configParameterUsages__AssemblyContext' '{' configParameterUsages__AssemblyContext+=VariableUsage ( "," configParameterUsages__AssemblyContext+=VariableUsage)* '}' )?
	'}';

ResourceRequiredDelegationConnector returns composition::ResourceRequiredDelegationConnector:
	'ResourceRequiredDelegationConnector'
	'{'
		'innerResourceRequiredRole_ResourceRequiredDelegationConnector' innerResourceRequiredRole_ResourceRequiredDelegationConnector=[entity::ResourceRequiredRole|EString]
		'outerResourceRequiredRole_ResourceRequiredDelegationConnector' outerResourceRequiredRole_ResourceRequiredDelegationConnector=[entity::ResourceRequiredRole|EString]
	'}';

EventChannel returns composition::EventChannel:
	'EventChannel'
	id=EString
	'{'
		'entityName' entityName=EString
		'eventGroup__EventChannel' eventGroup__EventChannel=[repository::EventGroup|EString]
		('eventChannelSourceConnector__EventChannel' '(' eventChannelSourceConnector__EventChannel+=[composition::EventChannelSourceConnector|EString] ( "," eventChannelSourceConnector__EventChannel+=[composition::EventChannelSourceConnector|EString])* ')' )?
		('eventChannelSinkConnector__EventChannel' '(' eventChannelSinkConnector__EventChannel+=[composition::EventChannelSinkConnector|EString] ( "," eventChannelSinkConnector__EventChannel+=[composition::EventChannelSinkConnector|EString])* ')' )?
	'}';

VariableUsage returns parameter::VariableUsage:
	'VariableUsage'
	'{'
		('variableCharacterisation_VariableUsage' '{' variableCharacterisation_VariableUsage+=VariableCharacterisation ( "," variableCharacterisation_VariableUsage+=VariableCharacterisation)* '}' )?
		'namedReference__VariableUsage' namedReference__VariableUsage=AbstractNamedReference
	'}';

BasicComponent returns repository::BasicComponent:
	'BasicComponent'
	id=EString
	'{'
		'entityName' entityName=EString
		'componentType' componentType=ComponentType
		('parentCompleteComponentTypes' '(' parentCompleteComponentTypes+=[repository::CompleteComponentType|EString] ( "," parentCompleteComponentTypes+=[repository::CompleteComponentType|EString])* ')' )?
		('providedRoles_InterfaceProvidingEntity' '{' providedRoles_InterfaceProvidingEntity+=ProvidedRole ( "," providedRoles_InterfaceProvidingEntity+=ProvidedRole)* '}' )?
		('resourceRequiredRoles__ResourceInterfaceRequiringEntity' '{' resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole ( "," resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole)* '}' )?
		('requiredRoles_InterfaceRequiringEntity' '{' requiredRoles_InterfaceRequiringEntity+=RequiredRole ( "," requiredRoles_InterfaceRequiringEntity+=RequiredRole)* '}' )?
		('componentParameterUsage_ImplementationComponentType' '{' componentParameterUsage_ImplementationComponentType+=VariableUsage ( "," componentParameterUsage_ImplementationComponentType+=VariableUsage)* '}' )?
		('serviceEffectSpecifications__BasicComponent' '{' serviceEffectSpecifications__BasicComponent+=ServiceEffectSpecification ( "," serviceEffectSpecifications__BasicComponent+=ServiceEffectSpecification)* '}' )?
		('passiveResource_BasicComponent' '{' passiveResource_BasicComponent+=PassiveResource ( "," passiveResource_BasicComponent+=PassiveResource)* '}' )?
	'}';

CompleteComponentType returns repository::CompleteComponentType:
	'CompleteComponentType'
	id=EString
	'{'
		'entityName' entityName=EString
		('parentProvidesComponentTypes' '(' parentProvidesComponentTypes+=[repository::ProvidesComponentType|EString] ( "," parentProvidesComponentTypes+=[repository::ProvidesComponentType|EString])* ')' )?
		('providedRoles_InterfaceProvidingEntity' '{' providedRoles_InterfaceProvidingEntity+=ProvidedRole ( "," providedRoles_InterfaceProvidingEntity+=ProvidedRole)* '}' )?
		('resourceRequiredRoles__ResourceInterfaceRequiringEntity' '{' resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole ( "," resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole)* '}' )?
		('requiredRoles_InterfaceRequiringEntity' '{' requiredRoles_InterfaceRequiringEntity+=RequiredRole ( "," requiredRoles_InterfaceRequiringEntity+=RequiredRole)* '}' )?
	'}';

ProvidesComponentType returns repository::ProvidesComponentType:
	'ProvidesComponentType'
	id=EString
	'{'
		'entityName' entityName=EString
		('providedRoles_InterfaceProvidingEntity' '{' providedRoles_InterfaceProvidingEntity+=ProvidedRole ( "," providedRoles_InterfaceProvidingEntity+=ProvidedRole)* '}' )?
		('resourceRequiredRoles__ResourceInterfaceRequiringEntity' '{' resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole ( "," resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole)* '}' )?
		('requiredRoles_InterfaceRequiringEntity' '{' requiredRoles_InterfaceRequiringEntity+=RequiredRole ( "," requiredRoles_InterfaceRequiringEntity+=RequiredRole)* '}' )?
	'}';

CompositeComponent returns repository::CompositeComponent:
	'CompositeComponent'
	id=EString
	'{'
		'entityName' entityName=EString
		'componentType' componentType=ComponentType
		('parentCompleteComponentTypes' '(' parentCompleteComponentTypes+=[repository::CompleteComponentType|EString] ( "," parentCompleteComponentTypes+=[repository::CompleteComponentType|EString])* ')' )?
		('assemblyContexts__ComposedStructure' '{' assemblyContexts__ComposedStructure+=AssemblyContext ( "," assemblyContexts__ComposedStructure+=AssemblyContext)* '}' )?
		('resourceRequiredDelegationConnectors_ComposedStructure' '{' resourceRequiredDelegationConnectors_ComposedStructure+=ResourceRequiredDelegationConnector ( "," resourceRequiredDelegationConnectors_ComposedStructure+=ResourceRequiredDelegationConnector)* '}' )?
		('eventChannel__ComposedStructure' '{' eventChannel__ComposedStructure+=EventChannel ( "," eventChannel__ComposedStructure+=EventChannel)* '}' )?
		('connectors__ComposedStructure' '{' connectors__ComposedStructure+=Connector ( "," connectors__ComposedStructure+=Connector)* '}' )?
		('providedRoles_InterfaceProvidingEntity' '{' providedRoles_InterfaceProvidingEntity+=ProvidedRole ( "," providedRoles_InterfaceProvidingEntity+=ProvidedRole)* '}' )?
		('resourceRequiredRoles__ResourceInterfaceRequiringEntity' '{' resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole ( "," resourceRequiredRoles__ResourceInterfaceRequiringEntity+=ResourceRequiredRole)* '}' )?
		('requiredRoles_InterfaceRequiringEntity' '{' requiredRoles_InterfaceRequiringEntity+=RequiredRole ( "," requiredRoles_InterfaceRequiringEntity+=RequiredRole)* '}' )?
		('componentParameterUsage_ImplementationComponentType' '{' componentParameterUsage_ImplementationComponentType+=VariableUsage ( "," componentParameterUsage_ImplementationComponentType+=VariableUsage)* '}' )?
	'}';

enum ComponentType returns repository::ComponentType:
				BUSINESS_COMPONENT = 'BUSINESS_COMPONENT' | INFRASTRUCTURE_COMPONENT = 'INFRASTRUCTURE_COMPONENT';

ResourceDemandingSEFF returns seff::ResourceDemandingSEFF:
	'ResourceDemandingSEFF'
	id=EString
	'{'
		'seffTypeID' seffTypeID=EString
		'describedService__SEFF' describedService__SEFF=[repository::Signature|EString]
		('steps_Behaviour' '{' steps_Behaviour+=AbstractAction ( "," steps_Behaviour+=AbstractAction)* '}' )?
		('resourceDemandingInternalBehaviours' '{' resourceDemandingInternalBehaviours+=ResourceDemandingInternalBehaviour ( "," resourceDemandingInternalBehaviours+=ResourceDemandingInternalBehaviour)* '}' )?
	'}';

ResourceDemandingInternalBehaviour returns seff::ResourceDemandingInternalBehaviour:
	{seff::ResourceDemandingInternalBehaviour}
	'ResourceDemandingInternalBehaviour'
	id=EString
	'{'
		('steps_Behaviour' '{' steps_Behaviour+=AbstractAction ( "," steps_Behaviour+=AbstractAction)* '}' )?
	'}';

StopAction returns seff::StopAction:
	'StopAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
	'}';

BranchAction returns seff::BranchAction:
	'BranchAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
		('branches_Branch' '{' branches_Branch+=AbstractBranchTransition ( "," branches_Branch+=AbstractBranchTransition)* '}' )?
	'}';

StartAction returns seff::StartAction:
	'StartAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
	'}';

ReleaseAction returns seff::ReleaseAction:
	'ReleaseAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		'passiveResource_ReleaseAction' passiveResource_ReleaseAction=[repository::PassiveResource|EString]
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
	'}';

LoopAction returns seff::LoopAction:
	'LoopAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
		'bodyBehaviour_Loop' bodyBehaviour_Loop=ResourceDemandingBehaviour
		'iterationCount_LoopAction' iterationCount_LoopAction=PCMRandomVariable
	'}';

ForkAction returns seff::ForkAction:
	'ForkAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
		('asynchronousForkedBehaviours_ForkAction' '{' asynchronousForkedBehaviours_ForkAction+=ForkedBehaviour ( "," asynchronousForkedBehaviours_ForkAction+=ForkedBehaviour)* '}' )?
		('synchronisingBehaviours_ForkAction' synchronisingBehaviours_ForkAction=SynchronisationPoint)?
	'}';

ExternalCallAction returns seff::ExternalCallAction:
	'ExternalCallAction'
	id=EString
	'{'
		'entityName' entityName=EString
		'retryCount' retryCount=EInt
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('failureTypes_FailureHandlingEntity' '(' failureTypes_FailureHandlingEntity+=[reliability::FailureType|EString] ( "," failureTypes_FailureHandlingEntity+=[reliability::FailureType|EString])* ')' )?
		'calledService_ExternalService' calledService_ExternalService=[repository::OperationSignature|EString]
		'role_ExternalService' role_ExternalService=[repository::OperationRequiredRole|EString]
		('inputVariableUsages__CallAction' '{' inputVariableUsages__CallAction+=VariableUsage ( "," inputVariableUsages__CallAction+=VariableUsage)* '}' )?
		('returnVariableUsage__CallReturnAction' '{' returnVariableUsage__CallReturnAction+=VariableUsage ( "," returnVariableUsage__CallReturnAction+=VariableUsage)* '}' )?
	'}';

AcquireAction returns seff::AcquireAction:
	timeout?='timeout'
	'AcquireAction'
	id=EString
	'{'
		'entityName' entityName=EString
		'timeoutValue' timeoutValue=EDouble
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		'passiveresource_AcquireAction' passiveresource_AcquireAction=[repository::PassiveResource|EString]
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
	'}';

CollectionIteratorAction returns seff::CollectionIteratorAction:
	'CollectionIteratorAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		'parameter_CollectionIteratorAction' parameter_CollectionIteratorAction=[repository::Parameter|EString]
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
		'bodyBehaviour_Loop' bodyBehaviour_Loop=ResourceDemandingBehaviour
	'}';

SetVariableAction returns seff::SetVariableAction:
	'SetVariableAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
		('localVariableUsages_SetVariableAction' '{' localVariableUsages_SetVariableAction+=VariableUsage ( "," localVariableUsages_SetVariableAction+=VariableUsage)* '}' )?
	'}';

InternalCallAction returns seff::InternalCallAction:
	'InternalCallAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		'calledResourceDemandingInternalBehaviour' calledResourceDemandingInternalBehaviour=[seff::ResourceDemandingInternalBehaviour|EString]
		('inputVariableUsages__CallAction' '{' inputVariableUsages__CallAction+=VariableUsage ( "," inputVariableUsages__CallAction+=VariableUsage)* '}' )?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
	'}';

EmitEventAction returns seff::EmitEventAction:
	'EmitEventAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		'eventType__EmitEventAction' eventType__EmitEventAction=[repository::EventType|EString]
		'sourceRole__EmitEventAction' sourceRole__EmitEventAction=[repository::SourceRole|EString]
		('inputVariableUsages__CallAction' '{' inputVariableUsages__CallAction+=VariableUsage ( "," inputVariableUsages__CallAction+=VariableUsage)* '}' )?
	'}';

InternalAction returns seff::InternalAction:
	'InternalAction'
	id=EString
	'{'
		'entityName' entityName=EString
		('predecessor_AbstractAction' predecessor_AbstractAction=[seff::AbstractAction|EString])?
		('successor_AbstractAction' successor_AbstractAction=[seff::AbstractAction|EString])?
		('resourceDemand_Action' '{' resourceDemand_Action+=ParametricResourceDemand ( "," resourceDemand_Action+=ParametricResourceDemand)* '}' )?
		('infrastructureCall__Action' '{' infrastructureCall__Action+=InfrastructureCall ( "," infrastructureCall__Action+=InfrastructureCall)* '}' )?
		('resourceCall__Action' '{' resourceCall__Action+=ResourceCall ( "," resourceCall__Action+=ResourceCall)* '}' )?
		('internalFailureOccurrenceDescriptions__InternalAction' '{' internalFailureOccurrenceDescriptions__InternalAction+=InternalFailureOccurrenceDescription ( "," internalFailureOccurrenceDescriptions__InternalAction+=InternalFailureOccurrenceDescription)* '}' )?
	'}';

ParametricResourceDemand returns seff_performance::ParametricResourceDemand:
	'ParametricResourceDemand'
	'{'
		'requiredResource_ParametricResourceDemand' requiredResource_ParametricResourceDemand=[resourcetype::ProcessingResourceType|EString]
		'specification_ParametericResourceDemand' specification_ParametericResourceDemand=PCMRandomVariable
	'}';

InfrastructureCall returns seff_performance::InfrastructureCall:
	'InfrastructureCall'
	id=EString
	'{'
		'entityName' entityName=EString
		'signature__InfrastructureCall' signature__InfrastructureCall=[repository::InfrastructureSignature|EString]
		'requiredRole__InfrastructureCall' requiredRole__InfrastructureCall=[repository::InfrastructureRequiredRole|EString]
		('inputVariableUsages__CallAction' '{' inputVariableUsages__CallAction+=VariableUsage ( "," inputVariableUsages__CallAction+=VariableUsage)* '}' )?
		'numberOfCalls__InfrastructureCall' numberOfCalls__InfrastructureCall=PCMRandomVariable
	'}';

ResourceCall returns seff_performance::ResourceCall:
	'ResourceCall'
	id=EString
	'{'
		'entityName' entityName=EString
		'resourceRequiredRole__ResourceCall' resourceRequiredRole__ResourceCall=[entity::ResourceRequiredRole|EString]
		'signature__ResourceCall' signature__ResourceCall=[resourcetype::ResourceSignature|EString]
		('inputVariableUsages__CallAction' '{' inputVariableUsages__CallAction+=VariableUsage ( "," inputVariableUsages__CallAction+=VariableUsage)* '}' )?
		'numberOfCalls__ResourceCall' numberOfCalls__ResourceCall=PCMRandomVariable
	'}';

ResourceDemandingBehaviour_Impl returns seff::ResourceDemandingBehaviour:
	{seff::ResourceDemandingBehaviour}
	'ResourceDemandingBehaviour'
	id=EString
	'{'
		('steps_Behaviour' '{' steps_Behaviour+=AbstractAction ( "," steps_Behaviour+=AbstractAction)* '}' )?
	'}';

ForkedBehaviour returns seff::ForkedBehaviour:
	{seff::ForkedBehaviour}
	'ForkedBehaviour'
	id=EString
	'{'
		('steps_Behaviour' '{' steps_Behaviour+=AbstractAction ( "," steps_Behaviour+=AbstractAction)* '}' )?
	'}';

ProbabilisticBranchTransition returns seff::ProbabilisticBranchTransition:
	'ProbabilisticBranchTransition'
	id=EString
	'{'
		'entityName' entityName=EString
		'branchProbability' branchProbability=EDouble
		'branchBehaviour_BranchTransition' branchBehaviour_BranchTransition=ResourceDemandingBehaviour
	'}';

GuardedBranchTransition returns seff::GuardedBranchTransition:
	'GuardedBranchTransition'
	id=EString
	'{'
		'entityName' entityName=EString
		'branchBehaviour_BranchTransition' branchBehaviour_BranchTransition=ResourceDemandingBehaviour
		'branchCondition_GuardedBranchTransition' branchCondition_GuardedBranchTransition=PCMRandomVariable
	'}';

SynchronisationPoint returns seff::SynchronisationPoint:
	'SynchronisationPoint'
	id=EString
	'{'
		('outputParameterUsage_SynchronisationPoint' '{' outputParameterUsage_SynchronisationPoint+=VariableUsage ( "," outputParameterUsage_SynchronisationPoint+=VariableUsage)* '}' )?
		'synchronousForkedBehaviours_SynchronisationPoint' '{' synchronousForkedBehaviours_SynchronisationPoint+=ForkedBehaviour ( "," synchronousForkedBehaviours_SynchronisationPoint+=ForkedBehaviour)* '}' 
	'}';

EBoolean returns ecore::EBoolean:
	'true' | 'false';

VariableCharacterisation returns parameter::VariableCharacterisation:
	'VariableCharacterisation'
	'{'
		'type' type=VariableCharacterisationType
		'specification_VariableCharacterisation' specification_VariableCharacterisation=PCMRandomVariable
	'}';

VariableReference0 returns stoex::VariableReference:
	'VariableReference'
	'{'
		'referenceName' referenceName=EString
	'}';

NamespaceReference returns stoex::NamespaceReference:
	'NamespaceReference'
	'{'
		'referenceName' referenceName=EString
		'innerReference_NamespaceReference' innerReference_NamespaceReference=AbstractNamedReference
	'}';

EventChannelSourceConnector returns composition::EventChannelSourceConnector:
	'EventChannelSourceConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'sourceRole__EventChannelSourceRole' sourceRole__EventChannelSourceRole=[repository::SourceRole|EString]
		'assemblyContext__EventChannelSourceConnector' assemblyContext__EventChannelSourceConnector=[composition::AssemblyContext|EString]
		'eventChannel__EventChannelSourceConnector' eventChannel__EventChannelSourceConnector=[composition::EventChannel|EString]
	'}';

EventChannelSinkConnector returns composition::EventChannelSinkConnector:
	'EventChannelSinkConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'sinkRole__EventChannelSinkConnector' sinkRole__EventChannelSinkConnector=[repository::SinkRole|EString]
		'assemblyContext__EventChannelSinkConnector' assemblyContext__EventChannelSinkConnector=[composition::AssemblyContext|EString]
		'eventChannel__EventChannelSinkConnector' eventChannel__EventChannelSinkConnector=[composition::EventChannel|EString]
		('filterCondition__EventChannelSinkConnector' filterCondition__EventChannelSinkConnector=PCMRandomVariable)?
	'}';

ProvidedDelegationConnector returns composition::ProvidedDelegationConnector:
	'ProvidedDelegationConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'innerProvidedRole_ProvidedDelegationConnector' innerProvidedRole_ProvidedDelegationConnector=[repository::OperationProvidedRole|EString]
		'outerProvidedRole_ProvidedDelegationConnector' outerProvidedRole_ProvidedDelegationConnector=[repository::OperationProvidedRole|EString]
		'assemblyContext_ProvidedDelegationConnector' assemblyContext_ProvidedDelegationConnector=[composition::AssemblyContext|EString]
	'}';

RequiredDelegationConnector returns composition::RequiredDelegationConnector:
	'RequiredDelegationConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'innerRequiredRole_RequiredDelegationConnector' innerRequiredRole_RequiredDelegationConnector=[repository::OperationRequiredRole|EString]
		'outerRequiredRole_RequiredDelegationConnector' outerRequiredRole_RequiredDelegationConnector=[repository::OperationRequiredRole|EString]
		'assemblyContext_RequiredDelegationConnector' assemblyContext_RequiredDelegationConnector=[composition::AssemblyContext|EString]
	'}';

AssemblyConnector returns composition::AssemblyConnector:
	'AssemblyConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'requiringAssemblyContext_AssemblyConnector' requiringAssemblyContext_AssemblyConnector=[composition::AssemblyContext|EString]
		'providingAssemblyContext_AssemblyConnector' providingAssemblyContext_AssemblyConnector=[composition::AssemblyContext|EString]
		'providedRole_AssemblyConnector' providedRole_AssemblyConnector=[repository::OperationProvidedRole|EString]
		'requiredRole_AssemblyConnector' requiredRole_AssemblyConnector=[repository::OperationRequiredRole|EString]
	'}';

AssemblyEventConnector returns composition::AssemblyEventConnector:
	'AssemblyEventConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'sinkRole__AssemblyEventConnector' sinkRole__AssemblyEventConnector=[repository::SinkRole|EString]
		'sourceRole__AssemblyEventConnector' sourceRole__AssemblyEventConnector=[repository::SourceRole|EString]
		'sinkAssemblyContext__AssemblyEventConnector' sinkAssemblyContext__AssemblyEventConnector=[composition::AssemblyContext|EString]
		'sourceAssemblyContext__AssemblyEventConnector' sourceAssemblyContext__AssemblyEventConnector=[composition::AssemblyContext|EString]
		('filterCondition__AssemblyEventConnector' filterCondition__AssemblyEventConnector=PCMRandomVariable)?
	'}';

SourceDelegationConnector returns composition::SourceDelegationConnector:
	'SourceDelegationConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'innerSourceRole__SourceRole' innerSourceRole__SourceRole=[repository::SourceRole|EString]
		'outerSourceRole__SourceRole' outerSourceRole__SourceRole=[repository::SourceRole|EString]
		'assemblyContext__SourceDelegationConnector' assemblyContext__SourceDelegationConnector=[composition::AssemblyContext|EString]
	'}';

SinkDelegationConnector returns composition::SinkDelegationConnector:
	'SinkDelegationConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'assemblyContext__SinkDelegationConnector' assemblyContext__SinkDelegationConnector=[composition::AssemblyContext|EString]
		'innerSinkRole__SinkRole' innerSinkRole__SinkRole=[repository::SinkRole|EString]
		'outerSinkRole__SinkRole' outerSinkRole__SinkRole=[repository::SinkRole|EString]
	'}';

AssemblyInfrastructureConnector returns composition::AssemblyInfrastructureConnector:
	'AssemblyInfrastructureConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'providedRole__AssemblyInfrastructureConnector' providedRole__AssemblyInfrastructureConnector=[repository::InfrastructureProvidedRole|EString]
		'requiredRole__AssemblyInfrastructureConnector' requiredRole__AssemblyInfrastructureConnector=[repository::InfrastructureRequiredRole|EString]
		'providingAssemblyContext__AssemblyInfrastructureConnector' providingAssemblyContext__AssemblyInfrastructureConnector=[composition::AssemblyContext|EString]
		('requiringAssemblyContext__AssemblyInfrastructureConnector' requiringAssemblyContext__AssemblyInfrastructureConnector=[composition::AssemblyContext|EString])?
	'}';

ProvidedInfrastructureDelegationConnector returns composition::ProvidedInfrastructureDelegationConnector:
	'ProvidedInfrastructureDelegationConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'innerProvidedRole__ProvidedInfrastructureDelegationConnector' innerProvidedRole__ProvidedInfrastructureDelegationConnector=[repository::InfrastructureProvidedRole|EString]
		'outerProvidedRole__ProvidedInfrastructureDelegationConnector' outerProvidedRole__ProvidedInfrastructureDelegationConnector=[repository::InfrastructureProvidedRole|EString]
		'assemblyContext__ProvidedInfrastructureDelegationConnector' assemblyContext__ProvidedInfrastructureDelegationConnector=[composition::AssemblyContext|EString]
	'}';

RequiredInfrastructureDelegationConnector returns composition::RequiredInfrastructureDelegationConnector:
	'RequiredInfrastructureDelegationConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'innerRequiredRole__RequiredInfrastructureDelegationConnector' innerRequiredRole__RequiredInfrastructureDelegationConnector=[repository::InfrastructureRequiredRole|EString]
		'outerRequiredRole__RequiredInfrastructureDelegationConnector' outerRequiredRole__RequiredInfrastructureDelegationConnector=[repository::InfrastructureRequiredRole|EString]
		'assemblyContext__RequiredInfrastructureDelegationConnector' assemblyContext__RequiredInfrastructureDelegationConnector=[composition::AssemblyContext|EString]
	'}';

RequiredResourceDelegationConnector returns composition::RequiredResourceDelegationConnector:
	'RequiredResourceDelegationConnector'
	id=EString
	'{'
		'entityName' entityName=EString
		'assemblyContext__RequiredResourceDelegationConnector' assemblyContext__RequiredResourceDelegationConnector=[composition::AssemblyContext|EString]
		'innerRequiredRole__RequiredResourceDelegationConnector' innerRequiredRole__RequiredResourceDelegationConnector=[entity::ResourceRequiredRole|EString]
		'outerRequiredRole__RequiredResourceDelegationConnector' outerRequiredRole__RequiredResourceDelegationConnector=[entity::ResourceRequiredRole|EString]
	'}';

String0 returns type::String:
	'String' /* TODO: implement this rule and an appropriate IValueConverter */;

UsageSpecification returns system::UsageSpecification:
	'UsageSpecification'
	id=EString
	'{'
		'entityName' entityName=EString
		('attributevalue' attributevalue=[systemcontext::AttributeValue|EString])?
		'attribute' attribute=[systemcontext::Attribute|EString]
	'}';
